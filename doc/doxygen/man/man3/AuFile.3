.TH "AuFile" 3 "Thu Aug 17 2017" "Version 0.5.1" "steghide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AuFile \- a \fBCvrStgFile\fP in Sun \&.au format  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <AuFile\&.h>\fP
.PP
Inherits \fBCvrStgFile\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBAuHeader\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAuFile\fP (\fBBinaryIO\fP *io)"
.br
.ti -1c
.RI "\fB~AuFile\fP (void)"
.br
.ti -1c
.RI "void \fBread\fP (\fBBinaryIO\fP *io)"
.br
.ti -1c
.RI "void \fBwrite\fP (void)"
.br
.ti -1c
.RI "std::list< \fBCvrStgFile::Property\fP > \fBgetProperties\fP (void) const"
.br
.ti -1c
.RI "std::vector< \fBMatchingAlgorithm\fP * > \fBgetMatchingAlgorithms\fP (\fBGraph\fP *g, \fBMatching\fP *m) const"
.br
.ti -1c
.RI "unsigned long \fBgetNumSamples\fP (void) const"
.br
.ti -1c
.RI "void \fBreplaceSample\fP (const \fBSamplePos\fP pos, const \fBSampleValue\fP *s)"
.br
.ti -1c
.RI "\fBSampleValue\fP * \fBgetSampleValue\fP (\fBSamplePos\fP pos) const"
.br
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "enum \fBENCODING\fP { \fBMULAW8\fP = 1, \fBPCM8\fP = 2, \fBPCM16\fP = 3 }"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBAuHeader\fP \fBHeader\fP"
.br
.ti -1c
.RI "std::vector< \fBBYTE\fP > \fBInfofield\fP"
.br
.ti -1c
.RI "\fBAudioData\fP * \fBData\fP"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static const \fBUWORD32\fP \fBRadius_MuLaw8\fP = 1"
.br
.ti -1c
.RI "static const \fBUWORD32\fP \fBRadius_PCM8\fP = 1"
.br
.ti -1c
.RI "static const \fBUWORD32\fP \fBRadius_PCM16\fP = 20"
.br
.ti -1c
.RI "static const unsigned short \fBSamplesPerVertex\fP = 2"
.br
.ti -1c
.RI "static const \fBEmbValue\fP \fBEmbValueModulus\fP = 2"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBAuFile::ENCODING\fP\fC [private]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMULAW8 \fP\fP
.TP
\fB\fIPCM8 \fP\fP
.TP
\fB\fIPCM16 \fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AuFile::AuFile (\fBBinaryIO\fP * io)"

.SS "AuFile::~AuFile (void)"

.SH "Member Function Documentation"
.PP 
.SS "std::vector< \fBMatchingAlgorithm\fP * > AuFile::getMatchingAlgorithms (\fBGraph\fP * g, \fBMatching\fP * m) const\fC [virtual]\fP"
get recommended list of matching algorithms 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP an empty matching - will be used in construction of \fBMatchingAlgorithm\fP objects
.RE
.PP
The \fBMatchingAlgorithm\fP objects returned by this function should be deleted by the caller if they are no longer needed\&. 
.PP
Reimplemented from \fBCvrStgFile\fP\&.
.SS "unsigned long AuFile::getNumSamples (void) const\fC [inline]\fP, \fC [virtual]\fP"
get the number of samples in this \fBCvrStgObject\fP 
.PP
Implements \fBCvrStgObject\fP\&.
.SS "std::list< \fBCvrStgFile::Property\fP > AuFile::getProperties (void) const\fC [virtual]\fP"

.PP
Implements \fBCvrStgFile\fP\&.
.SS "\fBSampleValue\fP* AuFile::getSampleValue (\fBSamplePos\fP pos) const\fC [inline]\fP, \fC [virtual]\fP"
get the sample at position pos 
.PP
\fBParameters:\fP
.RS 4
\fIpos\fP the position of a sample (must be in 0\&.\&.\&.\fBgetNumSamples()\fP-1) 
.RE
.PP
\fBReturns:\fP
.RS 4
the sample at the given position
.RE
.PP
The sample object is created in this function and should be deleted by the caller\&. The derived class should check the condition(s) given above in its Implementation of this function\&. 
.PP
Implements \fBCvrStgObject\fP\&.
.SS "void AuFile::read (\fBBinaryIO\fP * io)\fC [virtual]\fP"

.PP
Reimplemented from \fBCvrStgFile\fP\&.
.SS "void AuFile::replaceSample (const \fBSamplePos\fP pos, const \fBSampleValue\fP * s)\fC [inline]\fP, \fC [virtual]\fP"
replace a sample thus (possibly) altering the value of the bit returned by SampleValue->getBit() 
.PP
\fBParameters:\fP
.RS 4
\fIpos\fP the position of the sample (must be in 0\&.\&.\&.\fBgetNumSamples()\fP-1) 
.br
\fIs\fP the sample value that should replace the current sample value (must be of correct type for this \fBCvrStgObject\fP)
.RE
.PP
The derived class should check the condition(s) given above in its Implementation of this function\&. 
.PP
Implements \fBCvrStgObject\fP\&.
.SS "void AuFile::write (void)\fC [virtual]\fP"

.PP
Reimplemented from \fBCvrStgFile\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBAudioData\fP* AuFile::Data\fC [private]\fP"

.SS "const \fBEmbValue\fP AuFile::EmbValueModulus = 2\fC [static]\fP, \fC [private]\fP"

.SS "\fBAuHeader\fP AuFile::Header\fC [private]\fP"

.SS "std::vector<\fBBYTE\fP> AuFile::Infofield\fC [private]\fP"

.SS "const \fBUWORD32\fP AuFile::Radius_MuLaw8 = 1\fC [static]\fP, \fC [private]\fP"

.SS "const \fBUWORD32\fP AuFile::Radius_PCM16 = 20\fC [static]\fP, \fC [private]\fP"

.SS "const \fBUWORD32\fP AuFile::Radius_PCM8 = 1\fC [static]\fP, \fC [private]\fP"

.SS "const unsigned short AuFile::SamplesPerVertex = 2\fC [static]\fP, \fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for steghide from the source code\&.
